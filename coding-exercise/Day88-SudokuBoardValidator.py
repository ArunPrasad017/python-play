# Validator sudoku


def Validator(board):
    for i in range(9):
        row, col, block = {}, {}, {}
        row_cube = 3 * (i // 3)
        col_cube = 3 * (i % 3)
        for j in range(9):
            if board[i][j] != "." and board[i][j] in row:
                return False
            row[board[i][j]] = 1
            if board[j][i] != "." and board[j][i] in col:
                return False
            col[board[j][i]] = 1
            rc = row_cube + j // 3
            cc = col_cube + j % 3
            if board[rc][cc] != "." and board[rc][cc] in block:
                return False
            block[board[rc][cc]] = 1
    return True


board = [
    [".", ".", ".", "1", "4", ".", ".", "2", "."],
    [".", ".", "6", ".", ".", ".", ".", ".", "."],
    [".", ".", ".", ".", ".", ".", ".", ".", "."],
    [".", ".", "1", ".", ".", ".", ".", ".", "."],
    [".", "6", "7", ".", ".", ".", ".", ".", "9"],
    [".", ".", ".", ".", ".", ".", "8", "1", "."],
    [".", "3", ".", ".", ".", ".", ".", ".", "6"],
    [".", ".", ".", ".", ".", "7", ".", ".", "."],
    [".", ".", ".", "5", ".", ".", ".", "7", "."],
]


grid = [
    [".", ".", ".", "1", "4", ".", ".", "2", "."],
    [".", ".", "6", ".", ".", ".", ".", ".", "."],
    [".", ".", ".", ".", ".", ".", ".", ".", "."],
    [".", ".", "1", ".", ".", ".", ".", ".", "."],
    [".", "6", "7", ".", ".", ".", ".", ".", "9"],
    [".", ".", ".", ".", ".", ".", "8", "1", "."],
    [".", "3", ".", ".", ".", ".", ".", ".", "6"],
    [".", ".", ".", ".", ".", "7", ".", ".", "."],
    [".", ".", ".", "5", ".", ".", ".", "7", "."],
]
print(Validator(grid))
